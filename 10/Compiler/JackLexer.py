# Generated from Jack.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61")
        buf.write("\u014d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3")
        buf.write("\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37")
        buf.write("\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3&")
        buf.write("\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3")
        buf.write(")\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u0111")
        buf.write("\n*\3+\3+\7+\u0115\n+\f+\16+\u0118\13+\3+\3+\3,\6,\u011d")
        buf.write("\n,\r,\16,\u011e\3,\7,\u0122\n,\f,\16,\u0125\13,\3-\3")
        buf.write("-\3-\3-\7-\u012b\n-\f-\16-\u012e\13-\3-\3-\3-\3-\3-\3")
        buf.write(".\3.\3.\3.\7.\u0139\n.\f.\16.\u013c\13.\3.\3.\3/\6/\u0141")
        buf.write("\n/\r/\16/\u0142\3/\3/\3\60\6\60\u0148\n\60\r\60\16\60")
        buf.write("\u0149\3\60\3\60\3\u012c\2\61\3\3\5\4\7\5\t\6\13\7\r\b")
        buf.write("\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22")
        buf.write("#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\35")
        buf.write("9\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61\3\2")
        buf.write("\7\5\2\f\f\17\17$$\5\2C\\aac|\6\2\62;C\\aac|\4\2\f\f\17")
        buf.write("\17\4\2\13\13\"\"\2\u0157\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5")
        buf.write("g\3\2\2\2\7i\3\2\2\2\tk\3\2\2\2\13r\3\2\2\2\rx\3\2\2\2")
        buf.write("\17z\3\2\2\2\21|\3\2\2\2\23\u0080\3\2\2\2\25\u0085\3\2")
        buf.write("\2\2\27\u008d\3\2\2\2\31\u0099\3\2\2\2\33\u00a2\3\2\2")
        buf.write("\2\35\u00a9\3\2\2\2\37\u00ae\3\2\2\2!\u00b0\3\2\2\2#\u00b2")
        buf.write("\3\2\2\2%\u00b6\3\2\2\2\'\u00ba\3\2\2\2)\u00bc\3\2\2\2")
        buf.write("+\u00be\3\2\2\2-\u00c0\3\2\2\2/\u00c3\3\2\2\2\61\u00c8")
        buf.write("\3\2\2\2\63\u00ce\3\2\2\2\65\u00d1\3\2\2\2\67\u00d8\3")
        buf.write("\2\2\29\u00da\3\2\2\2;\u00dc\3\2\2\2=\u00de\3\2\2\2?\u00e0")
        buf.write("\3\2\2\2A\u00e2\3\2\2\2C\u00e4\3\2\2\2E\u00e6\3\2\2\2")
        buf.write("G\u00e8\3\2\2\2I\u00ea\3\2\2\2K\u00ec\3\2\2\2M\u00f1\3")
        buf.write("\2\2\2O\u00f7\3\2\2\2Q\u00fc\3\2\2\2S\u0110\3\2\2\2U\u0112")
        buf.write("\3\2\2\2W\u011c\3\2\2\2Y\u0126\3\2\2\2[\u0134\3\2\2\2")
        buf.write("]\u0140\3\2\2\2_\u0147\3\2\2\2ab\7e\2\2bc\7n\2\2cd\7c")
        buf.write("\2\2de\7u\2\2ef\7u\2\2f\4\3\2\2\2gh\7}\2\2h\6\3\2\2\2")
        buf.write("ij\7\177\2\2j\b\3\2\2\2kl\7u\2\2lm\7v\2\2mn\7c\2\2no\7")
        buf.write("v\2\2op\7k\2\2pq\7e\2\2q\n\3\2\2\2rs\7h\2\2st\7k\2\2t")
        buf.write("u\7g\2\2uv\7n\2\2vw\7f\2\2w\f\3\2\2\2xy\7.\2\2y\16\3\2")
        buf.write("\2\2z{\7=\2\2{\20\3\2\2\2|}\7k\2\2}~\7p\2\2~\177\7v\2")
        buf.write("\2\177\22\3\2\2\2\u0080\u0081\7e\2\2\u0081\u0082\7j\2")
        buf.write("\2\u0082\u0083\7c\2\2\u0083\u0084\7t\2\2\u0084\24\3\2")
        buf.write("\2\2\u0085\u0086\7d\2\2\u0086\u0087\7q\2\2\u0087\u0088")
        buf.write("\7q\2\2\u0088\u0089\7n\2\2\u0089\u008a\7g\2\2\u008a\u008b")
        buf.write("\7c\2\2\u008b\u008c\7p\2\2\u008c\26\3\2\2\2\u008d\u008e")
        buf.write("\7e\2\2\u008e\u008f\7q\2\2\u008f\u0090\7p\2\2\u0090\u0091")
        buf.write("\7u\2\2\u0091\u0092\7v\2\2\u0092\u0093\7t\2\2\u0093\u0094")
        buf.write("\7w\2\2\u0094\u0095\7e\2\2\u0095\u0096\7v\2\2\u0096\u0097")
        buf.write("\7q\2\2\u0097\u0098\7t\2\2\u0098\30\3\2\2\2\u0099\u009a")
        buf.write("\7h\2\2\u009a\u009b\7w\2\2\u009b\u009c\7p\2\2\u009c\u009d")
        buf.write("\7e\2\2\u009d\u009e\7v\2\2\u009e\u009f\7k\2\2\u009f\u00a0")
        buf.write("\7q\2\2\u00a0\u00a1\7p\2\2\u00a1\32\3\2\2\2\u00a2\u00a3")
        buf.write("\7o\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6")
        buf.write("\7j\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7f\2\2\u00a8\34")
        buf.write("\3\2\2\2\u00a9\u00aa\7x\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac")
        buf.write("\7k\2\2\u00ac\u00ad\7f\2\2\u00ad\36\3\2\2\2\u00ae\u00af")
        buf.write("\7*\2\2\u00af \3\2\2\2\u00b0\u00b1\7+\2\2\u00b1\"\3\2")
        buf.write("\2\2\u00b2\u00b3\7x\2\2\u00b3\u00b4\7c\2\2\u00b4\u00b5")
        buf.write("\7t\2\2\u00b5$\3\2\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8")
        buf.write("\7g\2\2\u00b8\u00b9\7v\2\2\u00b9&\3\2\2\2\u00ba\u00bb")
        buf.write("\7]\2\2\u00bb(\3\2\2\2\u00bc\u00bd\7_\2\2\u00bd*\3\2\2")
        buf.write("\2\u00be\u00bf\7?\2\2\u00bf,\3\2\2\2\u00c0\u00c1\7k\2")
        buf.write("\2\u00c1\u00c2\7h\2\2\u00c2.\3\2\2\2\u00c3\u00c4\7g\2")
        buf.write("\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7u\2\2\u00c6\u00c7\7")
        buf.write("g\2\2\u00c7\60\3\2\2\2\u00c8\u00c9\7y\2\2\u00c9\u00ca")
        buf.write("\7j\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7n\2\2\u00cc\u00cd")
        buf.write("\7g\2\2\u00cd\62\3\2\2\2\u00ce\u00cf\7f\2\2\u00cf\u00d0")
        buf.write("\7q\2\2\u00d0\64\3\2\2\2\u00d1\u00d2\7t\2\2\u00d2\u00d3")
        buf.write("\7g\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7w\2\2\u00d5\u00d6")
        buf.write("\7t\2\2\u00d6\u00d7\7p\2\2\u00d7\66\3\2\2\2\u00d8\u00d9")
        buf.write("\7\60\2\2\u00d98\3\2\2\2\u00da\u00db\7-\2\2\u00db:\3\2")
        buf.write("\2\2\u00dc\u00dd\7/\2\2\u00dd<\3\2\2\2\u00de\u00df\7,")
        buf.write("\2\2\u00df>\3\2\2\2\u00e0\u00e1\7\61\2\2\u00e1@\3\2\2")
        buf.write("\2\u00e2\u00e3\7(\2\2\u00e3B\3\2\2\2\u00e4\u00e5\7~\2")
        buf.write("\2\u00e5D\3\2\2\2\u00e6\u00e7\7>\2\2\u00e7F\3\2\2\2\u00e8")
        buf.write("\u00e9\7@\2\2\u00e9H\3\2\2\2\u00ea\u00eb\7\u0080\2\2\u00eb")
        buf.write("J\3\2\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee\7t\2\2\u00ee")
        buf.write("\u00ef\7w\2\2\u00ef\u00f0\7g\2\2\u00f0L\3\2\2\2\u00f1")
        buf.write("\u00f2\7h\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7n\2\2\u00f4")
        buf.write("\u00f5\7u\2\2\u00f5\u00f6\7g\2\2\u00f6N\3\2\2\2\u00f7")
        buf.write("\u00f8\7p\2\2\u00f8\u00f9\7w\2\2\u00f9\u00fa\7n\2\2\u00fa")
        buf.write("\u00fb\7n\2\2\u00fbP\3\2\2\2\u00fc\u00fd\7v\2\2\u00fd")
        buf.write("\u00fe\7j\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7u\2\2\u0100")
        buf.write("R\3\2\2\2\u0101\u0111\4\62;\2\u0102\u0103\4\63;\2\u0103")
        buf.write("\u0111\4\62;\2\u0104\u0105\4\63;\2\u0105\u0106\4\62;\2")
        buf.write("\u0106\u0111\4\62;\2\u0107\u0108\4\63;\2\u0108\u0109\4")
        buf.write("\62;\2\u0109\u010a\4\62;\2\u010a\u0111\4\62;\2\u010b\u010c")
        buf.write("\4\63\65\2\u010c\u010d\4\62\64\2\u010d\u010e\4\629\2\u010e")
        buf.write("\u010f\4\628\2\u010f\u0111\4\629\2\u0110\u0101\3\2\2\2")
        buf.write("\u0110\u0102\3\2\2\2\u0110\u0104\3\2\2\2\u0110\u0107\3")
        buf.write("\2\2\2\u0110\u010b\3\2\2\2\u0111T\3\2\2\2\u0112\u0116")
        buf.write("\7$\2\2\u0113\u0115\n\2\2\2\u0114\u0113\3\2\2\2\u0115")
        buf.write("\u0118\3\2\2\2\u0116\u0114\3\2\2\2\u0116\u0117\3\2\2\2")
        buf.write("\u0117\u0119\3\2\2\2\u0118\u0116\3\2\2\2\u0119\u011a\7")
        buf.write("$\2\2\u011aV\3\2\2\2\u011b\u011d\t\3\2\2\u011c\u011b\3")
        buf.write("\2\2\2\u011d\u011e\3\2\2\2\u011e\u011c\3\2\2\2\u011e\u011f")
        buf.write("\3\2\2\2\u011f\u0123\3\2\2\2\u0120\u0122\t\4\2\2\u0121")
        buf.write("\u0120\3\2\2\2\u0122\u0125\3\2\2\2\u0123\u0121\3\2\2\2")
        buf.write("\u0123\u0124\3\2\2\2\u0124X\3\2\2\2\u0125\u0123\3\2\2")
        buf.write("\2\u0126\u0127\7\61\2\2\u0127\u0128\7,\2\2\u0128\u012c")
        buf.write("\3\2\2\2\u0129\u012b\13\2\2\2\u012a\u0129\3\2\2\2\u012b")
        buf.write("\u012e\3\2\2\2\u012c\u012d\3\2\2\2\u012c\u012a\3\2\2\2")
        buf.write("\u012d\u012f\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0130\7")
        buf.write(",\2\2\u0130\u0131\7\61\2\2\u0131\u0132\3\2\2\2\u0132\u0133")
        buf.write("\b-\2\2\u0133Z\3\2\2\2\u0134\u0135\7\61\2\2\u0135\u0136")
        buf.write("\7\61\2\2\u0136\u013a\3\2\2\2\u0137\u0139\n\5\2\2\u0138")
        buf.write("\u0137\3\2\2\2\u0139\u013c\3\2\2\2\u013a\u0138\3\2\2\2")
        buf.write("\u013a\u013b\3\2\2\2\u013b\u013d\3\2\2\2\u013c\u013a\3")
        buf.write("\2\2\2\u013d\u013e\b.\2\2\u013e\\\3\2\2\2\u013f\u0141")
        buf.write("\t\6\2\2\u0140\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142")
        buf.write("\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0144\3\2\2\2")
        buf.write("\u0144\u0145\b/\2\2\u0145^\3\2\2\2\u0146\u0148\t\5\2\2")
        buf.write("\u0147\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u0147\3")
        buf.write("\2\2\2\u0149\u014a\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u014c")
        buf.write("\b\60\2\2\u014c`\3\2\2\2\r\2\u0110\u0116\u011c\u011e\u0121")
        buf.write("\u0123\u012c\u013a\u0142\u0149\3\b\2\2")
        return buf.getvalue()


class JackLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    INTEGERCONSTANT = 41
    STRINGCONSTANT = 42
    IDENTIFIER = 43
    BLOCKCOMMENT = 44
    COMMENT = 45
    WHITESPACE = 46
    JUMPLINE = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'{'", "'}'", "'static'", "'field'", "','", "';'", 
            "'int'", "'char'", "'boolean'", "'constructor'", "'function'", 
            "'method'", "'void'", "'('", "')'", "'var'", "'let'", "'['", 
            "']'", "'='", "'if'", "'else'", "'while'", "'do'", "'return'", 
            "'.'", "'+'", "'-'", "'*'", "'/'", "'&'", "'|'", "'<'", "'>'", 
            "'~'", "'true'", "'false'", "'null'", "'this'" ]

    symbolicNames = [ "<INVALID>",
            "INTEGERCONSTANT", "STRINGCONSTANT", "IDENTIFIER", "BLOCKCOMMENT", 
            "COMMENT", "WHITESPACE", "JUMPLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "INTEGERCONSTANT", "STRINGCONSTANT", 
                  "IDENTIFIER", "BLOCKCOMMENT", "COMMENT", "WHITESPACE", 
                  "JUMPLINE" ]

    grammarFileName = "Jack.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


